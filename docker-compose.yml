services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U komil -d wbServiceDb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrations:
      image: kukymbr/goose-docker:3.24.2
      environment:
        - GOOSE_DRIVER=postgres
        - GOOSE_DBSTRING=host=postgres_container port=${DB_PORT} user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME}
      volumes:
        - ./db/migrations:/migrations
      depends_on:
        postgres:
          condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  producer:
    build: ./cmd/producer
    container_name: producer
    depends_on:
      migrations:
       condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
        
  app:
    build: .
    container_name: wb-service
    environment:
      DB_HOST: postgres
      KAFKA_HOST: kafka
    ports:
      - "8080:8080"
      - "5000:5000"
    depends_on:
      migrations:
       condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
